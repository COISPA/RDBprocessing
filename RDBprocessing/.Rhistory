%in% c("LC","n.at.len")], collapse='+'), "LC", sep="~")),
value.var = "n.at.len")
dt3$age=as.numeric(dt3$age)
dt3<- dt3 %>% mutate_at(vars( -(age) ),
funs( if_else( is.na(.), 0, .) ) )
dfALK<-left_join(dfALK,dt3,by=c("AGE"="age"))
## CV
# LEstim_An @ageNum$ cv
LEstim_An@ageNum[["cv"]]$age=as.numeric(LEstim_An@ageNum[["cv"]]$age)
dfALK<- dfALK%>% left_join(LEstim_An@ageNum[["cv"]]%>% select(age,value),
by=c( "AGE"="age"))%>% dplyr::mutate(CV=value)%>% select(-c(value))
# take care of number of Length classes (max is 100 acc. to DG MARE Med&BS template)
zz<-dim(dfALK[-c(1:14)])[2]
names(dfALK)[-c(1:14)]<- paste("LENGTHCLASS",seq(0,zz-1,1),sep="")
if(zz>=100){
dfALK$LENGTHCLASS100_PLUS<- rowSums(dfALK[,-c(1:114)])
}
alk.temp2<-data.frame(matrix(nrow=0,ncol=114))
colnames(alk.temp2)=as.vector(header)
dfALK<-dfALK%>% dplyr::select(one_of(as.vector(names(alk.temp2))))
# dfALK
alk.temp2<- rbind(alk.temp2,(dfALK))
#alk.temp2<-dfALK
#alk.temp2[,-c(1:13,114)][is.na(alk.temp2[,-c(1:13,114)])] <- 0
# export updated CsDataCons
if (sel_spe$APPLY_TO_CATCHES_FILE[i] == "Y") {
if (sel_spe$typeALK[i] == "fillALKmult") {
fri_csc2 <- fillALKmult(fri_csc1, STK, p = 10, trace = T)
save(fri_csc2,
file = paste("upd", STK, sel_spe$SEX[i], sel_spe$GSA[i], ".Rdata", sep ="_"))
} else{
res1 <-
alkLgthRec(
fri_csc1,
type = sel_spe$typeALK[i],
value = sel_spe$valueALK[i],
update = T,
preview = F,
postview = F
)
#save(res1,
# file = paste("upd", STK, sel_spe$SEX[i], sel_spe$GSA[i], ".Rdata", sep =
#  "_"))
}
}
}
alk.temp2=alk.temp2[alk.temp2$AGE!=-1,]
alk.temp2
alk.temp2=merge(alk.temp2,RDBprocessing::Annex17,by.x="SPECIES",by.y="Scientific_name")
alk.temp2
RDBprocessing::Annex17
#data=data[!is.na(data$Age),]
fri_cs<-RCGtoCOST_CS(data)
LC<- age<- area<- logMsg<- n.at.len<- sex<- spp<- value<-NULL
header<-c("COUNTRY","AREA","START_YEAR","END_YEAR","SPECON","SPECIES","SEX","APPLY_TO_CATCHES_FILE","TOTAL_NUMBER_OF_HARD_STRUCTURE_READ_BY_AGE","CV","UNIT","AGE" ,paste("LENGTHCLASS",seq(0,99),sep=""),"LENGTHCLASS100_PLUS","COMMENTS")
fri_strD <- strIni(spaceStrata="area")
COUNTRY<-unique(fri_cs@ca$landCtry)
mat=  aggregate(data$Age,by=list(data$Flag_country,data$Year,data$Sex,data$Area,data$Species),FUN="length")
colnames(mat)=c("COUNTRY","START_YEAR","SEX","AREA","SPECIES","NB")
tab1=merge(mat,RDBprocessing::Annex17,by.x="SPECIES",by.y="Scientific_name")
tab1=tab1[tab1$SEX=="F" | tab1$SEX=="M",]
tab2=tab1[tab1$SEX=="F",]
tab2$SEX="C"
tab1=rbind(tab1,tab2)
colnames(tab1)[7]="SPE"
sel_spe<-tab1
sel_spe$END_YEAR<-sel_spe$START_YEAR
sel_spe$methodDesc_LAN.len.age<-"analytical"
sel_spe$adjust<-"FALSE"
colnames(sel_spe)[5]="GSA"
sel_spe$typeALK<- "stepIncr"
sel_spe$valueALK<-10
sel_spe$APPLY_TO_CATCHES_FILE <- "Y"
sel_spe$COMMENTS <-""
sel_spe$LC_RANGE <-10
for (i in 1:dim(sel_spe)[1]) {
STK<- sel_spe$SPECIES[i]
fri_cs1<- subset(fri_cs, year%in% seq(sel_spe$START_YEAR[i],
sel_spe$END_YEAR[i],by=1),table="ca",link=T)
#  estimate sample size (number of otoliths per stock, sex and age)
if (sel_spe$SEX[i]=="C"){
fri_csv <- csDataVal(fri_cs1)
nml<- data.frame(fri_cs1@ca) %>% filter(!is.na(age))%>%
dplyr::group_by(area,spp,age)%>%
dplyr::summarize(TOTAL_NUMBER_OF_HARD_STRUCTURE_READ_BY_AGE=n())
} else { # ALK for selected sex
fri_cs1=subset(fri_cs1,sex==sel_spe$SEX[i],table="ca",link=T)
fri_csv <- csDataVal(fri_cs1)
# get sample size: number of otoliths
nml<- data.frame(fri_cs1@ca) %>% filter(!is.na(age))%>%
dplyr::group_by(area,spp,age,sex)%>%
summarize(TOTAL_NUMBER_OF_HARD_STRUCTURE_READ_BY_AGE=n())
}
fri_csv1<- subSetSpp(fri_csv, STK)
fri_csv1<- subset(fri_csv1, area%in% sel_spe$GSA[i],table="ca",link=T)
fri_csc1 <- csDataCons(fri_csv1, fri_strD)
## ### CV from individual length-at-age
LEstim_An <-
dbeObject(
desc = "Length at age",
species = STK,
catchCat = "LAN",
param = "length",
strataDesc = fri_strD, # ,
methodDesc = "analytical"   #sel_spe$methodDesc_LAN.len.age[i]
)
if(sel_spe$methodDesc_LAN.len.age[i]=="analytical") {
LEstim_An <-  bpEstim(LEstim_An, fri_csc1, adjust = sel_spe$adjust[i])
} else{
LEstim_An <-  bpBoot(LEstim_An, fri_csc1, adjust = sel_spe$adjust[i])
}
## ALK
res1 <- alkLgthRec(fri_csc1,type=sel_spe$typeALK[i],value=sel_spe$valueALK[i],
update=F, preview=F,postview = F)
if (sel_spe$typeALK[i]=="fillALKmult"){
fri_csc2 <- fillALKmult(fri_csc1,STK,p=10,trace=T)
res1 <- alkLgthRec(fri_csc2,update=F, preview=F,postview = F,
value=sel_spe$valueALK[i])
}
dfALK <-
data.frame(
COUNTRY =COUNTRY ,
AREA =sel_spe$GSA[i],
START_YEAR = unique(sel_spe$START_YEAR[i]) ,
END_YEAR = unique( sel_spe$END_YEAR[i]) ,
SPECIES = STK ,
SEX = sel_spe$SEX[i],
UNIT = unique(fri_cs1@ca$lenCode[fri_cs1@ca$spp==STK]) ,
SPECON=  -1,
APPLY_TO_CATCHES_FILE= unique(sel_spe$APPLY_TO_CATCHES_FILE[i]),
CV=NA,
AGE = as.numeric(colnames(res1$alk)),
COMMENTS= sel_spe$COMMENTS[i],
LENGTHCLASS100_PLUS=0
)
# get sample size
if (sel_spe$SEX[i]=="C"){
dfALK <-  dfALK %>%
left_join(nml, by = c("AREA" = 'area', 'SPECIES' = 'spp',"AGE"="age")) %>%
dplyr::mutate(SPECIES =  sel_spe$SPE[i])
# FAO Three alpha code
} else{
dfALK <-  dfALK %>%
left_join(nml, by = c("AREA" = 'area', 'SPECIES' = 'spp',"AGE"="age",
"SEX"="sex")) %>%
dplyr::mutate(SPECIES =  sel_spe$SPE[i])
# FAO Three alpha code
}
aa=data.frame(res1$alk)
names(aa)=colnames(res1$alk)
aa=aa%>% dplyr::mutate(LC=rownames(res1$alk))
## fix LC
UNIT <- as.character( unique(fri_csc1@ca$lenCode[fri_csc1@ca$spp==STK]) )
if (UNIT %in% c("mm", "MM")& sel_spe$LC_RANGE[i]==10) {
aa$LC<-as.numeric(aa$LC)/10
UNIT1<-"cm"
}
if (UNIT %in% c("mm", "MM") & sel_spe$LC_RANGE[i]==1) {
aa$LC<-as.numeric(aa$LC)
UNIT1<- "mm"
}
if (UNIT %in% c("mm", "MM")& sel_spe$LC_RANGE[i]==5) {
aa$LC<-as.numeric(aa$LC)/10
UNIT1<-"cm"
}
if (UNIT %in% c("cm", "CM") ) {
aa$LC<-as.numeric(aa$LC)
UNIT1<- "cm"
}
if (UNIT %in% c("scm", "SCM")& sel_spe$LC_RANGE[i]==10) {
aa$LC<-as.numeric(aa$LC)/10
UNIT1<-"cm"
}
round_any = function(x, accuracy, f=round){f(x/ accuracy) * accuracy}
aa$LC<- round_any( aa$LC,1,floor)
###
dfALK$UNIT<-UNIT1
aa1=aa %>%  gather(age, n.at.len, -LC)
aa1 <- as.data.table(aa1)
#aa$LC
seq_l <-  seq(0, 99, by = 1) #
dt1<- aa1[, list(LC = seq_l), by = age]
dt2<- left_join(dt1,aa1)
dt3 <- data.table::dcast(dt2,as.formula(paste(paste(names(dt2)[! names(dt2)
%in% c("LC","n.at.len")], collapse='+'), "LC", sep="~")),
value.var = "n.at.len")
dt3$age=as.numeric(dt3$age)
dt3<- dt3 %>% mutate_at(vars( -(age) ),
funs( if_else( is.na(.), 0, .) ) )
dfALK<-left_join(dfALK,dt3,by=c("AGE"="age"))
## CV
# LEstim_An @ageNum$ cv
LEstim_An@ageNum[["cv"]]$age=as.numeric(LEstim_An@ageNum[["cv"]]$age)
dfALK<- dfALK%>% left_join(LEstim_An@ageNum[["cv"]]%>% select(age,value),
by=c( "AGE"="age"))%>% dplyr::mutate(CV=value)%>% select(-c(value))
# take care of number of Length classes (max is 100 acc. to DG MARE Med&BS template)
zz<-dim(dfALK[-c(1:14)])[2]
names(dfALK)[-c(1:14)]<- paste("LENGTHCLASS",seq(0,zz-1,1),sep="")
if(zz>=100){
dfALK$LENGTHCLASS100_PLUS<- rowSums(dfALK[,-c(1:114)])
}
alk.temp2<-data.frame(matrix(nrow=0,ncol=114))
colnames(alk.temp2)=as.vector(header)
dfALK<-dfALK%>% dplyr::select(one_of(as.vector(names(alk.temp2))))
# dfALK
alk.temp2<- rbind(alk.temp2,(dfALK))
#alk.temp2<-dfALK
#alk.temp2[,-c(1:13,114)][is.na(alk.temp2[,-c(1:13,114)])] <- 0
# export updated CsDataCons
if (sel_spe$APPLY_TO_CATCHES_FILE[i] == "Y") {
if (sel_spe$typeALK[i] == "fillALKmult") {
fri_csc2 <- fillALKmult(fri_csc1, STK, p = 10, trace = T)
save(fri_csc2,
file = paste("upd", STK, sel_spe$SEX[i], sel_spe$GSA[i], ".Rdata", sep ="_"))
} else{
res1 <-
alkLgthRec(
fri_csc1,
type = sel_spe$typeALK[i],
value = sel_spe$valueALK[i],
update = T,
preview = F,
postview = F
)
#save(res1,
# file = paste("upd", STK, sel_spe$SEX[i], sel_spe$GSA[i], ".Rdata", sep =
#  "_"))
}
}
}
alk.temp2=alk.temp2[alk.temp2$AGE!=-1,]
alk.temp2$SPECIES
data_cs=data_ex
mat=  aggregate(datacs$Length_class,by=list(datacs$Flag_country,datacs$Year,data$Area,data$Species),FUN="length")
datacs=data_ex
mat=  aggregate(datacs$Length_class,by=list(datacs$Flag_country,datacs$Year,data$Area,data$Species),FUN="length")
mat
colnames(mat)=c("COUNTRY","YEAR","AREA","SPECIES","NB")
tab1=merge(mat,RDBprocessing::Annex17,by.x="SPECIES",by.y="Scientific_name")
tab1
# define LCs and UNIT len
UNIT <- as.character( unique(fri_csc@ca$lenCode[fri_csc@ca$spp==STK]) )
mat=  aggregate(datacs$Length_class,by=list(datacs$Flag_country,datacs$Year,data$Area,data$Species),FUN="length")
colnames(mat)=c("COUNTRY","YEAR","AREA","SPECIES","NB")
tab1=merge(mat,RDBprocessing::Annex17,by.x="SPECIES",by.y="Scientific_name")
colnames(tab1)[6]="SPE"
sel_spe<-tab1
sel_spe$lanEstim_methodDesc<-"analytical"
colnames(sel_spe)[4]="GSA"
sel_spe$SPECON<-""
sel_spe[sel_spe$UNIT=="cm",]$LC_RANGE=10
sel_spe[sel_spe$UNIT=="mm",]$LC_RANGE=1
mat=  aggregate(datacs$Length_class,by=list(datacs$Flag_country,datacs$Year,data$Area,data$Species),FUN="length")
colnames(mat)=c("COUNTRY","YEAR","AREA","SPECIES","NB")
tab1=merge(mat,RDBprocessing::Annex17,by.x="SPECIES",by.y="Scientific_name")
tab1
colnames(tab1)[6]="SPE"
sel_spe<-tab1
sel_spe$lanEstim_methodDesc<-"analytical"
sel_spe
colnames(sel_spe)[4]="GSA"
sel_spe$SPECON<-""
sel_spe
sel_spe[sel_spe$UNIT=="cm",]$LC_RANGE=10
sel_spe[sel_spe$UNIT=="cm",]
sel_spe$LC_RANGE=""
sel_spe[sel_spe$UNIT=="cm",]$LC_RANGE=10
sel_spe[sel_spe$UNIT=="mm",]$LC_RANGE=1
sel_spe[sel_spe$UNIT=="mm",]$LC_RANGE=1
sel_spe
if(nrow(sel_spe[sel_spe$UNIT=="cm",])>0) {    sel_spe[sel_spe$UNIT=="cm",]$LC_RANGE=10} else if (nrow(sel_spe[sel_spe$UNIT=="mm",])>0){
sel_spe[sel_spe$UNIT=="mm",]$LC_RANGE=1
}
sel_spe
datacs=data_ex
datacl=data_exampleCL
fri_cs1<-RCGtoCOST_CS(datacs)
fri_cl1<-RCGtoCOST_CL(datacl)
fri_strD1 <- strIni(timeStrata="quarter", techStrata = "foCatEu5",
spaceStrata = "area")
fri_csc <- csDataCons(fri_cs1, fri_strD1)
library(COSTcore)
library(COSTeda)
library(COSTdbe)
fri_csc <- csDataCons(fri_cs1, fri_strD1)
fri_cs1<-RCGtoCOST_CS(datacs)
fri_cl1<-RCGtoCOST_CL(datacl)
fri_strD1 <- strIni(timeStrata="quarter", techStrata = "foCatEu5",
spaceStrata = "area")
fri_csc <- csDataCons(fri_cs1, fri_strD1)
fri_strD1 <- strIni(timeStrata="quarter", techStrata = "foCatEu5",
spaceStrata = "area")
fri_csc <- csDataCons(fri_cs1, fri_strD1)
fri_csv <- csDataVal(fri_cs1)
fri_csc <- csDataCons(fri_csv, fri_strD1)
fri_clv <- clDataVal(fri_cl1)
fri_clc <- clDataCons(fri_clv, fri_strD1)
# extract COUNTRY  and YEAR
COUNTRY<-unique(fri_cl1@cl$landCtry)
YEAR=unique(fri_cl1@cl$year)
header=c(c("COUNTRY","AREA","YEAR","QUARTER","VESSEL_LENGTH","GEAR","MESH_SIZE_RANGE","FISHERY","AREA","SPECON", "SPECIES","LANDINGS","UNIT",paste("LENGTHCLASS",seq(0,99),sep=""),"LENGTHCLASS100_PLUS")
)
mat=  aggregate(datacs$Length_class,by=list(datacs$Flag_country,datacs$Year,data$Area,data$Species),FUN="length")
colnames(mat)=c("COUNTRY","YEAR","AREA","SPECIES","NB")
tab1=merge(mat,RDBprocessing::Annex17,by.x="SPECIES",by.y="Scientific_name")
colnames(tab1)[6]="SPE"
sel_spe<-tab1
sel_spe$lanEstim_methodDesc<-"analytical"
colnames(sel_spe)[4]="GSA"
sel_spe$SPECON<-""
sel_spe$LC_RANGE=""
if(nrow(sel_spe[sel_spe$UNIT=="cm",])>0) {    sel_spe[sel_spe$UNIT=="cm",]$LC_RANGE=10} else if (nrow(sel_spe[sel_spe$UNIT=="mm",])>0){
sel_spe[sel_spe$UNIT=="mm",]$LC_RANGE=1
}
i01
i=1
STK<- sel_spe$SPECIES[i]
AREA <- sel_spe$GSA[i]
fri_csc1<- subset(fri_csc, space==sel_spe$GSA[i],table="ca",link=T)
fri_clc1<- subset(fri_clc, space==sel_spe$GSA[i],table="cl")
lanEstim <-
dbeObject(
desc = paste(STK, AREA,"Landings", sep="_"),
species = STK,
catchCat = "LAN",
strataDesc = fri_strD1,
methodDesc = sel_spe$lanEstim_methodDesc[i]
)
if ( sel_spe$lanEstim_methodDesc[i]=="analytical"){
lanEstim <- RaiseLgth(lanEstim, fri_csc1, fri_clc1,incl.precision =F)
} else {
lanEstim <- RaiseLgthBoot(lanEstim, fri_csc1, fri_clc1,
incl.precision =F,B=15)
}
lanEstim
fri_csc1
fri_cs1<-RCGtoCOST_CS(datacs)
fri_cl1<-RCGtoCOST_CL(datacl)
fri_cs1
data_ex
data_ex
fri_cs1@ca
fri_cs1
fri_cs1@tr
fri_cs1@hh
fri_cl1
datacs@ca$quarter
fri_cs1@ca$quarter
fri_cs1@ca$quarter<-quarter(fri_cs1@ca$date)
fri_cs1@ca$date
fri_cs1@ca
datacs$Date
datacs=
format(as.POSIXct(datacs$Date, format = "%d/%m/%Y"), format="%Y-%m-%d")
datacs=
dataok=format(as.POSIXct(datacs$Date, format = "%d/%m/%Y"), format="%Y-%m-%d")
datacs=data_ex
as.POSIXct(datacs$Date, format = "%d/%m/%Y")
format(as.POSIXct(datacs$Date, format = "%d/%m/%Y"), format="%Y-%m-%d")
datacs$Date=format(as.POSIXct(datacs$Date, format = "%d/%m/%Y"), format="%Y-%m-%d")
fri_cs1<-RCGtoCOST_CS(datacs)
fri_cs1
fri_csv <- csDataVal(fri_cs1)
fri_csv
library(timeDate)
fri_cs1@tr
merge=merge(fri_cs1@ca,fri_cs1@tr,by="trpCode")
merge
merge=merge(fri_cs1@ca,fri_cs1@hh,by="trpCode")
merge
merge$quarter=quarter(merge$date)
merge
fri_cs1@ca$quarter=merge$quarter
fri_cs1@ca
fri_cl1<-RCGtoCOST_CL(datacl)
fri_strD1 <- strIni(timeStrata="quarter", techStrata = "foCatEu6",
spaceStrata = "area")
fri_csv <- csDataVal(fri_cs1)
fri_csc <- csDataCons(fri_csv, fri_strD1)
fri_clv <- clDataVal(fri_cl1)
fri_clc <- clDataCons(fri_clv, fri_strD1)
# extract COUNTRY  and YEAR
COUNTRY<-unique(fri_cl1@cl$landCtry)
YEAR=unique(fri_cl1@cl$year)
header=c(c("COUNTRY","AREA","YEAR","QUARTER","VESSEL_LENGTH","GEAR","MESH_SIZE_RANGE","FISHERY","AREA","SPECON", "SPECIES","LANDINGS","UNIT",paste("LENGTHCLASS",seq(0,99),sep=""),"LENGTHCLASS100_PLUS")
)
mat=  aggregate(datacs$Length_class,by=list(datacs$Flag_country,datacs$Year,data$Area,data$Species),FUN="length")
colnames(mat)=c("COUNTRY","YEAR","AREA","SPECIES","NB")
tab1=merge(mat,RDBprocessing::Annex17,by.x="SPECIES",by.y="Scientific_name")
colnames(tab1)[6]="SPE"
sel_spe<-tab1
sel_spe$lanEstim_methodDesc<-"analytical"
colnames(sel_spe)[4]="GSA"
sel_spe$SPECON<-""
sel_spe$LC_RANGE=""
if(nrow(sel_spe[sel_spe$UNIT=="cm",])>0) {    sel_spe[sel_spe$UNIT=="cm",]$LC_RANGE=10} else if (nrow(sel_spe[sel_spe$UNIT=="mm",])>0){
sel_spe[sel_spe$UNIT=="mm",]$LC_RANGE=1
}
for (i in 1:dim(sel_spe)[1]) {
STK<- sel_spe$SPECIES[i]
AREA <- sel_spe$GSA[i]
fri_csc1<- subset(fri_csc, space==sel_spe$GSA[i],table="ca",link=T)
fri_clc1<- subset(fri_clc, space==sel_spe$GSA[i],table="cl")
# The first step is to create the empty object, that will be given
# the appropriate values for the descritor  fields.
lanEstim <-
dbeObject(
desc = paste(STK, AREA,"Landings", sep="_"),
species = STK,
catchCat = "LAN",
strataDesc = fri_strD1,
methodDesc = sel_spe$lanEstim_methodDesc[i]
)
# the only arguments to pass to the function are the dbe object,
# the consolidated cs and cl datasets.
if ( sel_spe$lanEstim_methodDesc[i]=="analytical"){
lanEstim <- RaiseLgth(lanEstim, fri_csc1, fri_clc1,incl.precision =F)
} else {
lanEstim <- RaiseLgthBoot(lanEstim, fri_csc1, fri_clc1,
incl.precision =F,B=15)
}
# totalW\$estim : total weight,
aa <-lanEstim@totalW$estim
aa$value<- aa$value/1000 # tons
aa<- rename(aa, "totalW"=value)
# lenStruc\$estim : numbers-at-length estimates
bb<- lanEstim@lenStruc$estim
# define LCs and UNIT len
UNIT <- as.character( unique(fri_csc@ca$lenCode[fri_csc@ca$spp==STK]) )
if (UNIT %in% c("mm", "MM")& sel_spe$LC_RANGE[i]==10) {
bb$length<-as.numeric(bb$length)/10
UNIT1<-"CM"
}
if (UNIT %in% c("mm", "MM") & sel_spe$LC_RANGE[i]==1) {
bb$length<-as.numeric(bb$length)
UNIT1<- "MM"
}
if (UNIT %in% c("mm", "MM") & sel_spe$LC_RANGE[i]==5) {
bb$length<-as.numeric(bb$length)/10
UNIT1<-"CM"
}
if (UNIT %in% c("cm", "CM") ) {
bb$length<-as.numeric(bb$length)
UNIT1<- "CM"
}
bb$length<- plyr::round_any( bb$length,1,floor)
bb$value<- bb$value/1000 # '000 ind
ab=left_join(bb,aa ,by = c("time", "space", "technical"))
ab<- ab %>% separate(technical, c("gear","FISHERY", "VL","MESH_SIZE_RANGE"),
sep = "_",remove=T)
ab$length<- as.numeric(as.character(ab$length))
ab<- ab%>% group_by(time,   space , gear  ,FISHERY, VL,MESH_SIZE_RANGE  ) %>%
mutate(minlc=min(length,na.rm=T),maxlc=max(length,na.rm=T))
# matrix with all combinations of "time"   "space"  "gear"   "VL"
# "length" ,"MESH_SIZE_RANGE"
dt <- as.data.table(ab)
dt[,c(1:7)][is.na(dt[,c(1:7)])]<- -1
seq_l <-  seq(0, max(dt$length,na.rm = T), by = 1) #
dt$id<- paste(dt$time,dt$space,dt$gear,dt$FISHERY,dt$VL,
dt$MESH_SIZE_RANGE,sep=":")
dt1<- dt[, list(length = seq_l), by = id]
dt1<- dt1 %>% separate(id, c("time", "space", "gear", "FISHERY","VL",
"MESH_SIZE_RANGE"), sep = ":")
ab[is.na(ab)]<- -1
dt2<- left_join(dt1,ab)
dt2$stock<- STK
##
dt3 <- data.table::dcast(dt2,as.formula(paste(paste(names(dt2)[! names(dt2) %in%
c("length","value")], collapse='+'), "length", sep="~")),
value.var = "value")
dt3=dt3[complete.cases(dt3[,c(7:9)]), ]
dt3 <- dt3 %>% separate(time, c("Year","Quarter")," - ")
dt3$MESH_SIZE_RANGE<-as.character(dt3$MESH_SIZE_RANGE)
# numbers at LC : NA-->0
dt3<- dt3 %>% mutate_at(vars( -(Year:stock) ),
funs( if_else( is.na(.), 0, .) ) )
LANDINGS <- data.frame(
ID = NA ,
COUNTRY = COUNTRY ,
YEAR = YEAR ,
QUARTER =dt3$Quarter,
VESSEL_LENGTH = dt3$VL,
GEAR = dt3$gear,
MESH_SIZE_RANGE = dt3$MESH_SIZE_RANGE,
FISHERY =  dt3$FISHERY ,
AREA = sel_spe$GSA[i],
SPECON = -1 ,
SPECIES = STK ,
LANDINGS = dt3$totalW ,
UNIT = UNIT1
)
LANDINGS<-left_join(LANDINGS,dt3[,-c(1,3,8:11)],by=c( "QUARTER"  ="Quarter" ,
"GEAR"="gear" ,  "VESSEL_LENGTH" = "VL"  ,
"MESH_SIZE_RANGE","FISHERY" ))
# take care of number of Length classes (max is 100 acc. to DG MARE Med&BS template)
zz<-dim(LANDINGS[-c(1:13)])[2]
names(LANDINGS)[-c(1:13)]<- paste("LENGTHCLASS",seq(0,zz-1,1),sep="")
if(zz>=100){
LANDINGS$LENGTHCLASS100_PLUS<- rowSums(LANDINGS[,!1:113])
LANDINGS<-LANDINGS %>% select(ID:LENGTHCLASS99,LENGTHCLASS100_PLUS)
}
# FISHERY to DG MARE Med&BS codification
LANDINGS$FISHERY <- fishery$SDEF_codification[match(LANDINGS$FISHERY ,
fishery$DGMARE_Med_BS_codification)]
# species to FAO three alpha code and set ID (COUNTRY, AREA, GEAR, VESSEL_LENGTH,
# MESH_SIZE_RANGE,QUARTER, SPECIES)
land.tab <-LANDINGS %>% mutate(SPECIES=sel_spe$SPE[match(SPECIES,sel_spe$SPECIES)],
ID = paste(COUNTRY, AREA, GEAR,FISHERY, VESSEL_LENGTH,
MESH_SIZE_RANGE,YEAR, QUARTER, SPECIES, sep = "_"))
lan.temp2<-bind_rows(lan.temp2,land.tab)
lan.temp2[,-c(1:13)][is.na(lan.temp2[,-c(1:13)])] <- 0
}
